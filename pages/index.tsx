import Head from 'next/head';
import Stack from '@layouts/Stack';
import { UserListPaginationContext, UserListPaginationContextProvider } from '../contexts/UserListPaginationContext';
import UserList, { useRandomUsers } from '@modules/UserList';
import { ChangeEventHandler, useCallback, useContext } from 'react';
import classNames from 'classnames';

// https://stackoverflow.com/questions/11867545/change-text-color-based-on-brightness-of-the-covered-background-area
function getContrastYIQ(hexColor: string) {
    const hex = hexColor.replace('#', '');
    const r = parseInt(hex.substring(0, 2), 16);
    const g = parseInt(hex.substring(2, 4), 16);
    const b = parseInt(hex.substring(4, 6), 16);
    const yiq = (r * 299 + g * 587 + b * 114) / 1000;
    return yiq >= 128;
}

const HomeContent = () => {
    const { page, setPage } = useContext(UserListPaginationContext);
    const { isFetching } = useRandomUsers(page);

    const handleColorChange = useCallback<ChangeEventHandler<HTMLInputElement>>((e) => {
        const r = document.querySelector(':root') as HTMLElement;
        if (r) r.style.setProperty('--card-bg-color', e.target.value);

        if (getContrastYIQ(e.target.value)) {
            r.style.setProperty('--card-text-color', '#000');
        } else {
            r.style.setProperty('--card-text-color', '#fff');
        }
    }, []);

    return (
        <Stack direction={'column'} alignItems={'center'}>
            <div
                className={classNames('h-flex align-center')}
                style={{
                    gap: '0.5rem',
                    padding: '1rem 0',
                }}
            >
                <label htmlFor={'color_picker'}>Card background color:</label>
                <input id={'color_picker'} type={'color'} onChange={handleColorChange} />
            </div>

            <UserList />
            <p>Page #{page}</p>

            {isFetching && <div>Fetching...</div>}

            <Stack
                direction={'row'}
                style={{
                    width: '100%',
                }}
                justifyContent={'space-between'}
            >
                <button disabled={page === 1} onClick={() => setPage((prevPage) => prevPage - 1)}>
                    Prev
                </button>
                <button disabled={page === 10} onClick={() => setPage((prevPage) => prevPage + 1)}>
                    Next
                </button>
            </Stack>
        </Stack>
    );
};

export default function Home() {
    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <UserListPaginationContextProvider>
                <HomeContent />
            </UserListPaginationContextProvider>
        </>
    );
}
